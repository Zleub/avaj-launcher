42

search...
 5
apaget
Menu
 My projects
 All projects
 List projects
 Available Cursus
Your projects
 C Exam Alone In The Dark - Beginner
 cloud-1
 Darkly
 ft_printf
 HumanGL
 Matrice
 ShaderPixel
SCALE FOR PROJECT AVAJ-LAUNCHER
You should correct 1 student in this team
Git repository

vogsphere@vogsphere.42.fr:intra/2018/activities/avaj_launcher/adebray
Introduction

To ensure this evaluation goes smoothly, please respect the following set
of rules :

- Please remain courteous, polite, respectful and constructive at all
times during this exchange. The trust bond between the school's
community and yourself depends on it.

- Should you notice any malfunctions within the submitted project,
make sure you take the time to discuss those with the student (or
group of students) being graded.

- Keep in mind that some subjects can be interpreted differently.
If you come accross a situation where the student you're grading
has interpreted the subject differently than you, try and judge
fairly whether their interpretation is acceptable or not, and grade
them accordingly. Our peer-evaluation system can only work if you
both take it seriously.
Guidelines

- You may only evaluate whatever is in the GiT submission directory of
the student you are grading.

- Make sure to check wether the GiT submission directory
belongs to the student (or group) you're grading, and that
it's the right project.

- Make sure no mischievous aliases have been used to trick you
into correcting something that is not actually in the official
submitted directory.

- Any script created to make this evaluation session easier - whether
it was produced by you or the student being graded - must be
checked rigorously in order to avoid bad surprises.

- If the student who is grading this project hasn't done the
project him/herself yet, he/she must read the whole topic
before starting the evaluation session.

- Use the flags available to you on this scale in order to report
a submission directory that is empty, non-functional, that contains
a norm errors or a case of cheating, etc...
In this case, the evaluation session ends and the final grade is 0
(or -42, in case of cheating). However, unless the student has
cheated, we advise you to go through the project together in order
for the two (or more) of you to identify the problems that may have
led for this project to fail, and avoid repeating those mistakes for
future projects.
Attachments
 Subject   Scenario   UML Diagram
Preliminaries
Compilation
Compile the program with the commands described in the subject. Does
the project compile?
Program design
Does project respect the UML class diagram to the letter? It is not
a problem if there are additional classes or private attributes and
methods added by the student.
Functionality
Validation
Check if the program validates the input file. Try running the
program without an input file present, with inconsistent data,
missing values or out of range values. Does the validation work?
Simulation
Is the simulation.txt file generated acording to the specifications?
Check to see if the ID is unique and if all messages are logged
correctly.
Bonus
Exception handling
Does the project contain custom exceptions for treating abnormarl
behaviour specific to the program? Are they relevant? Do they have
good messages?
Security
Feed the program with a valid input file, where the contents where
previously encrypted with MD5. Does the program have the same
behaviour as with the non-encrypted file?
Ratings
Donâ€™t forget to check the flag corresponding to the defense

Conclusion
Leave a comment on this evaluation


Dommage pour le probleme de config !
